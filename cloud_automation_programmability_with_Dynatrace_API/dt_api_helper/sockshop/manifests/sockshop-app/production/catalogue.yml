---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: catalogue
    product: sockshop
    release: stable
    stage: prod
    tier: business
    version: "3.1"
  name: catalogue
  namespace: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: catalogue
      product: sockshop
      release: stable
      stage: prod
      tier: business
      version: "3.1"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        pipeline.build: 3.1.0.0593
        pipeline.project: sockshop
        pipeline.stage: prod-stable
        sidecar.istio.io/inject: "false"
        support.channel: '#support-sockshop-services'
        support.contact: john.doe@sockshop.com
      labels:
        app.kubernetes.io/name: catalogue
        app.kubernetes.io/version: "3.1"
        app.kubernetes.io/part-of: sockshop
        app: catalogue
        product: sockshop
        release: stable
        stage: prod
        tier: business
        version: "3.1"
    spec:
      containers:
      - image: dynatracesockshop/catalogue:0.5.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: catalogue
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      dnsPolicy: ClusterFirst
      nodeSelector:
        beta.kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir:
          medium: Memory
        name: tmp-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: catalogue
  labels:
    app: catalogue
  namespace: production
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: catalogue

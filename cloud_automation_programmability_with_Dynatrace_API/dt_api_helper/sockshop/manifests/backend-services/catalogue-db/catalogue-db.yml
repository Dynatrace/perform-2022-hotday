---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: catalogue-db
  name: catalogue-db
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      name: catalogue-db
      product: sockshop
      stage: dev
      tier: data
      version: "2.0"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        pipeline.build: 2.0.0.6347
        pipeline.project: sockshop
        pipeline.stage: dev
        sidecar.istio.io/inject: "false"
        support.channel: '#support-sockshop-data'
        support.contact: mary.poppins@sockshop.com
      labels:
        app.kubernetes.io/name: catalogue-db
        app.kubernetes.io/version: "2.0"
        app.kubernetes.io/part-of: sockshop
        name: catalogue-db
        product: sockshop
        stage: dev
        tier: data
        version: "2.0"
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: fake_password
        - name: MYSQL_DATABASE
          value: socksdb
        image: dynatracesockshop/catalogue-db
        imagePullPolicy: Always
        name: catalogue-db
        ports:
        - containerPort: 3306
          name: mysql
          protocol: TCP
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: catalogue-db
  labels:
    name: catalogue-db
  namespace: dev
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    name: catalogue-db

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: catalogue-db
  name: catalogue-db
  namespace: production
spec:
  replicas: 1
  selector:
    matchLabels:
      name: catalogue-db
      product: sockshop
      stage: prod
      tier: data
      version: "1.4"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        pipeline.build: 1.4.3.0054
        pipeline.project: sockshop
        pipeline.stage: prod-stable
        sidecar.istio.io/inject: "false"
        support.channel: '#support-sockshop-data'
        support.contact: mary.poppins@sockshop.com
      labels:
        app.kubernetes.io/name: catalogue-db
        app.kubernetes.io/version: "1.4"
        app.kubernetes.io/part-of: sockshop
        name: catalogue-db
        product: sockshop
        stage: prod
        tier: data
        version: "1.4"
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: fake_password
        - name: MYSQL_DATABASE
          value: socksdb
        image: dynatracesockshop/catalogue-db
        imagePullPolicy: Always
        name: catalogue-db
        ports:
        - containerPort: 3306
          name: mysql
          protocol: TCP
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: catalogue-db
  labels:
    name: catalogue-db
  namespace: production
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    name: catalogue-db
